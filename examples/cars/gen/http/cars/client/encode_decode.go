// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// cars HTTP client encoders and decoders
//
// Command:
// $ goa gen goa.design/goa/examples/cars/design

package client

import (
	"context"
	"net/http"
	"net/url"

	carssvc "goa.design/goa/examples/cars/gen/cars"
	goahttp "goa.design/goa/http"
)

// BuildListRequest instantiates a HTTP request object with method and path set
// to call the "storage" service "list" endpoint
func (c *Client) BuildListRequest(ctx context.Context, v interface{}) (*http.Request, error) {
	u := &url.URL{Scheme: "ws", Host: c.host, Path: ListCarsPath()}
	req, err := http.NewRequest("GET", u.String(), nil)
	if err != nil {
		return nil, goahttp.ErrInvalidURL("storage", "list", u.String(), err)
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}

	return req, nil
}

// EncodeListRequest returns an encoder for requests sent to the cars list
// server.
func EncodeListRequest(encoder func(*http.Request) goahttp.Encoder) func(*http.Request, interface{}) error {
	return func(req *http.Request, v interface{}) error {
		p, ok := v.(*carssvc.ListPayload)
		if !ok {
			return goahttp.ErrInvalidType("cars", "list", "*carssvc.ListPayload", v)
		}
		values := req.URL.Query()
		values.Add("style", p.Style)
		req.URL.RawQuery = values.Encode()
		return nil
	}
}
